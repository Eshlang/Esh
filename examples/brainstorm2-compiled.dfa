seg func
    df _f_playerSpawn "_playerSpawn"
    df _fs_Player_gamePlayer_instance "s_Player_gamePlayer_instance"
    df _f_Player_gamePlayer_updateHotbar "_Player_gamePlayer_updateHotbar"
    df _fe_Player_gamePlayer_Player_respawn "e_Player_gamePlayer_Player_respawn"
    df _fe_Player_gamePlayer_Player_command "e_Player_gamePlayer_Player_command"
    df _fe_Player_gamePlayer_Player_killPlayer "e_Player_gamePlayer_Player_killPlayer"
    df _f_Items_simpleItem "_Items_simpleItem"
    
seg param
    ; Game Values
    dp value _val_playerCount #type:playercount
    dp value _val_eventBlockLocation #type:eventblocklocation

    ; Variables
    dp var _fieldmap_Player_gamePlayer "fieldmap_Player_gamePlayer"

    ; Constants
    dp loc _const_Locations_spawn 0 50 0 #pitch:10 #yaw:90
    dp loc _const_Locations_gameArea 25 70 25 #pitch:0 #yaw:180
    dp loc _const_enterButton 0.5 52.5 2.5

    dp var _const_swordItems "const_swordItems"

    ; Reused
    dp str _u0 "%uuid"

    ; Registers
    dp var _fre0 "fre_0" #scope:line
    dp var _fre1 "fre_1" #scope:line
    dp var _fre2 "fre_2" #scope:line
    
    dp var _lre0 "lre_0" #scope:local
    dp var _lre1 "lre_1" #scope:local
    dp var _lre2 "lre_2" #scope:local

    dp str _lre0_i0 "%index(lre_0,1)"
    dp str _lre0_i1 "%index(lre_0,2)"
    dp str _lre0_i2 "%index(lre_0,3)"

    dp str _lre1_i0 "%index(lre_0,1)"
    dp str _lre1_i1 "%index(lre_0,2)"
    dp str _lre1_i2 "%index(lre_0,3)"

    dp str _lre2_i0 "%index(lre_0,1)"
    dp str _lre2_i1 "%index(lre_0,2)"
    dp str _lre2_i2 "%index(lre_0,3)"

    dp var _plre0 "%var(lre_0)"
    dp var _plre1 "%var(lre_1)"
    dp var _plre2 "%var(lre_2)"

    dp str _plre0_i0 "%index(%var(lre_0),1)"
    dp str _plre0_i1 "%index(%var(lre_0),2)"
    dp str _plre0_i2 "%index(%var(lre_0),3)"

    dp str _plre1_i0 "%index(%var(lre_1),1)"
    dp str _plre1_i1 "%index(%var(lre_1),2)"
    dp str _plre1_i2 "%index(%var(lre_1),3)"

    dp str _plre2_i0 "%index(%var(lre_2),1)"
    dp str _plre2_i1 "%index(%var(lre_2),2)"
    dp str _plre2_i2 "%index(%var(lre_2),3)"

    ; Compiler Params
    dp item _c_item "stone"
    dp var _c_chars "c_chars"
    dp var _c_emptylist "c_emptylist"
    dp str _c_chstr0 "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\u0008\u0009\u000a\u000b\u000c\u000d\u000e\u000f"
    dp str _c_chstr1 "\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f"
    dp str _c_chstr2 "\u0020\u0021\u0022\u0023\u0024\u0025\u0026\u0027\u0028\u0029\u002a\u002b\u002c\u002d\u002e\u002f"
    dp str _c_chstr3 "\u0030\u0031\u0032\u0033\u0034\u0035\u0036\u0037\u0038\u0039\u003a\u003b\u003c\u003d\u003e\u003f"
    dp str _c_chstr4 "\u0040\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004b\u004c\u004d\u004e\u004f"
    dp str _c_chstr5 "\u0050\u0051\u0052\u0053\u0054\u0055\u0056\u0057\u0058\u0059\u005a\u005b\u005c\u005d\u005e\u005f"
    dp str _c_chstr6 "\u0060\u0061\u0062\u0063\u0064\u0065\u0066\u0067\u0068\u0069\u006a\u006b\u006c\u006d\u006e\u006f"
    dp str _c_chstr7 "\u0070\u0071\u0072\u0073\u0074\u0075\u0076\u0077\u0078\u0079\u007a\u007b\u007c\u007d\u007e\u007f"
    dp str _c_hash4 "%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))"
    dp str _c_hash8 "%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))%index(c_chars,%random(1,128))"

seg code
    plev join
        varif eq _val_playerCount, 1
            ; Compiler Initializations
            var string _c_chars, _c_chstr0, _c_chstr1, _c_chstr2, _c_chstr3, _c_chstr4, _c_chstr5, _c_chstr6, _c_chstr7
            var createdict _fieldmap_Player_gamePlayer
            var createlist _c_emptylist

            ; Constant Initializations
            var createlist _const_swordItems
            dp txt _t0 "<gold>Level 1 Sword"
            var createlist _lre0, "wooden_sword" _t0
            call _f_Items_simpleItem
            var appendvalue _const_swordItems, _lre0
            dp txt _t0 "<gold>Level 2 Sword"
            var createlist _lre0, "stone_sword" _t0
            call _f_Items_simpleItem
            var appendvalue _const_swordItems, _lre0
            dp txt _t0 "<gold>Level 3 Sword"
            var createlist _lre0, "iron_sword" _t0
            call _f_Items_simpleItem
            var appendvalue _const_swordItems, _lre0
            dp txt _t0 "<gold>Level 4 Sword"
            var createlist _lre0, "gold_sword" _t0
            call _f_Items_simpleItem
            var appendvalue _const_swordItems, _lre0
            dp txt _t0 "<gold>Level 5 Sword OMG"
            var createlist _lre0, "diamond_sword" _t0
            call _f_Items_simpleItem
            var appendvalue _const_swordItems, _lre0

        endif

        ; Global Player Join
        sel defaultplayer
        var set _lre0, _u0 ;_lre0 is now the default player instance.
        sel reset
        call _f_playerSpawn

    ; _lre0 is parameter 0; player uuid
    func _f_playerSpawn
        sel playername _lre0
        plac teleport _const_Locations_spawn
        plac clearinv
        plac sethealth 20
        varif dicthaskey _fieldmap_Player_gamePlayer, _lre0
            var removedictentry _fieldmap_Player_gamePlayer, _lre0
        endif
        sel reset

    plev leave
        sel defaultplayer
        var set _fre0, _u0
        sel reset
        varif dicthaskey _fieldmap_Player_gamePlayer, _fre0
            var removedictentry _fieldmap_Player_gamePlayer, _fre0
        endif

    plev rightclick
        sel defaultplayer
        var set _fre0, _u0
        sel reset
        varif dicthaskey _fieldmap_Player_gamePlayer, _fre0 #not:true
            varif eq _val_eventBlockLocation, _const_enterButton
                var set _lre0, _u0
                call _fs_Player_gamePlayer_instance   
                var setdictvalue _fieldmap_Player_gamePlayer, _u0, _lre0
            endif
        endif

    func _fs_Player_gamePlayer_instance
        var set _lre1, _c_hash8
        var createlist _plre1, _lre0, 0
        var set _lre0, _lre1
        call _f_Player_gamePlayer_updateHotbar
        sel playername _plre0_i0
        plac teleport _const_enterButton
        sel reset
        var set _lre0, _plre1_i0
    
    ; where _lre0 = hash of the field struct
    ; so naturally _plre0 -> field struct
    ; and _plre0_i0 -> player UUID, meanwhile i1+ would be other struct fields
    func _f_Player_gamePlayer_updateHotbar
        sel playername _plre0_i0
        plac clearinv
        var div _fre0, _plre0_i1, 10 #divisionmode:floorresult
        var minnumber _fre0, _fre0, 4
        var getlistvalue _fre1, _const_swordItems, _fre0
        plac setslotitem _fre1, 5
        sel reset

    func _f_Items_simpleItem
        var setitemtype _fre0, _c_item, _lre0_i0
        var setitemname _fre0, _fre0, _lre0_i1
        var setbreakability _fre0 #breakability:unbreakable
        var setitemflags _fre0 #hidearmortrim:false #hidecolor:false #hideenchantments:false #hideattributes:false #hideunbreakable:false #hidecandestroy:false #hidecanplaceon:false #hidepotioneffects:false
        var setitemlore _fre0, _c_emptylist
        var set _lre0, _fre0
    
    plev respawn
        ; Global Player Respawn
            ; (empty)

        ; Player.gamePlayer globalfield Respawn
        rep foreachentry _fre0, _fre1, _fieldmap_Player_gamePlayer
            ; Player.gamePlayer globalfield Respawn (Per Field)
            var set _lre1, _fre0 ; key (uuid), goes to lre1
            var set _lre0, _fre1 ; hash, goes to lre0
            sel defaultplayer
            var set _lre2, _u0 
            sel reset
            call _fe_Player_gamePlayer_Player_respawn
        endrep
    
    plev command
        ; Global Player Command
            ; (empty)

        ; Player.gamePlayer globalfield Command
        rep foreachentry _fre0, _fre1, _fieldmap_Player_gamePlayer
            ; Player.gamePlayer globalfield Command (Per Field)
            var set _lre1, _fre0 ; key (uuid), goes to lre1
            var set _lre0, _fre1 ; hash, goes to lre0
            sel defaultplayer
            dp value _t0 #type:eventcommand
            var createlist _lre2, _u0, _t0 
            sel reset
            call _fe_Player_gamePlayer_Player_command
        endrep
    
    plev killPlayer
        ; FightInfo
        ; Struct: Victim UUID, Killer UUID, EventDamage, DamageEventCause
        dp value _t0 #type:uuid #target:victim
        dp value _t1 #type:uuid #target:killer
        dp value _t2 #type:eventdamage
        dp value _t3 #type:damageeventcause
        var createlist _fre0, _t0, _t1, _t2, _t3

        ; Global Player KillPlayer
            ; (empty)

        ; Player.gamePlayer globalfield KillPlayer
        rep foreachentry _fre1, _fre2, _fieldmap_Player_gamePlayer
            ; Player.gamePlayer globalfield KillPlayer (Per Field)
            var set _lre0, _fre1
            var set _lre1, _fre2
            var set _lre2, _fre0
            call _fe_Player_gamePlayer_Player_killPlayer
        endrep

    ; where _lre0 = hash of the field struct
    ; so naturally _plre0 -> field struct
    ; and _plre0_i0 -> player UUID, meanwhile i1+ would be other struct fields
    func _fe_Player_gamePlayer_Player_killPlayer
        varif stringmatches _plre2_i0, _plre0_i0
            var minnumber _fre0, _plre0_i1, 3
            varif eq _fre0, 0
                ctrl return
            endif
            var set _fre1, _plre0_i1
            var sub _fre1, _fre1, _fre0
            var setlistvalue _plre0, 2, _fre1
            dp txt _t0 "<red>-"
            dp txt _t1 " score - you now have "
            dp txt _t2 " points."
            var styledtext _fre2, _t0, _fre1, _t1, _plre0_i0, _t2
            sel playername _plre0_i0
            plac actionbar _fre2
            sel reset
            dp txt _t0 "<green>+"
            dp txt _t1 " score - you now have "
            dp str _t2 "%index(%entry(fieldmap_Player_gamePlayer,%index(lre_2,2)),2)"
            dp txt _t3 " points."
            var styledtext _fre2, _t0, _fre1, _t1, _t2, _t3
            sel playername _plre2_i1
            plac actionbar _fre2
            sel reset
        endif

    ; where _lre0 = hash of the field struct
    ; so naturally _plre0 -> field struct
    ; and _plre0_i0 -> player UUID, meanwhile i1+ would be other struct fields
    func _fe_Player_gamePlayer_Player_respawn
        varif stringmatches _lre2, _plre0_i0 #not:true
            ctrl return
        endif
        sel playername _plre0_i0
        dp txt _t0, "Welcome back from the dead!"
        plac sendmessage _t0
        sel reset
        sel playername _lre2
        sel reset
        ; _lre0 is already the hash of the field struct,
        ; and that's the parameter this globalfield function takes too
        ; maybe all oop functions will have their own special parameter slot for this? dunno
        call _f_Player_gamePlayer_updateHotbar


    ; _lre0 = hash of the field struct
    ; _lre1 = key of the field struct (in this case the uuid)
    ; _lre2 = [default player uuid, command string]
    func _fe_Player_gamePlayer_Player_command
        varif stringmatches _lre2, _plre0_i0 #not:true
            ctrl return
        endif
        varif stringmatches _lre2_i1, "spawn"
        ; we want specifically the default player passed in the function
            var set _lre0, _lre2_i0
            call _f_playerSpawn
        endif

    plev playertakedmg
        sel defaultplayer
        var set _fre0, _u0
        sel reset
        varif dicthaskey _fieldmap_Player_gamePlayer, _fre0 #not:true
            gmac cancelevent
        endif